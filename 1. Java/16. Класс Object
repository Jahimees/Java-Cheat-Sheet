# Object

Object ‚Äî —ç—Ç–æ –∫–æ—Ä–Ω–µ–≤–æ–π –∫–ª–∞—Å—Å –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤ –≤ Java. –î–∞–∂–µ –µ—Å–ª–∏ —Ç—ã —è–≤–Ω–æ –Ω–µ –Ω–∞—Å–ª–µ–¥—É–µ—à—å –µ–≥–æ ‚Äî —Ç–≤–æ–π –∫–ª–∞—Å—Å –≤—Å—ë —Ä–∞–≤–Ω–æ –±—É–¥–µ—Ç –µ–≥–æ –ø–æ—Ç–æ–º–∫–æ–º.

| –ú–µ—Ç–æ–¥                                 | –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ                                                    | –ß–∞—Å—Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞—é—Ç?              |
| ------------------------------------- | ------------------------------------------------------------- | ------------------------------ |
| `equals(Object obj)`                  | –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é                                | ‚úÖ –ß–∞—Å—Ç–æ                        |
| `hashCode()`                          | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ö–µ—à-–∫–æ–¥ –æ–±—ä–µ–∫—Ç–∞, —Å–≤—è–∑–∞–Ω —Å `equals()`               | ‚úÖ –ß–∞—Å—Ç–æ                        |
| `toString()`                          | –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏                           | ‚òëÔ∏è –ò–Ω–æ–≥–¥–∞                      |
| `getClass()`                          | –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç `Class`, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π runtime-—Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ | ‚òëÔ∏è –ò–Ω–æ–≥–¥–∞                      |
| `clone()`                             | –°–æ–∑–¥–∞—ë—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞                            | ‚òëÔ∏è –ò–Ω–æ–≥–¥–∞                      |
| `finalize()` *(—É—Å—Ç–∞—Ä.)*               | –í—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å–±–æ—Ä—â–∏–∫–æ–º –º—É—Å–æ—Ä–∞ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –æ–±—ä–µ–∫—Ç–∞           | ‚ùå –£—Å—Ç–∞—Ä–µ–≤—à–∏–π                   |
| `wait()` / `notify()` / `notifyAll()` | –ü–æ—Ç–æ–∫–æ–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞–º–∏                  | ‚úÖ –°–ø—Ä–∞—à–∏–≤–∞—é—Ç –≤ multi-threading |

### üîç equals() –∏ hashCode()
üß† –ö–æ–Ω—Ç—Ä–∞–∫—Ç:

–ï—Å–ª–∏ a.equals(b) ‚Üí a.hashCode() == b.hashCode()

–û–±—Ä–∞—Ç–Ω–æ–µ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ: –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ hashCode –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é—Ç equals() == true

üí° equals() –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–π, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, User, Product –∏ —Ç.–¥.)

–ü—Ä–∏–º–µ—Ä equals/hashCode:

    public class User {
        private final UUID id;
        private final String name;
        private final int age;

        public User(UUID id, String name, int age) {
            this.id = id;
            this.name = name;
            this.age = age;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;                             // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ
            if (o == null || getClass() != o.getClass()) return false; // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ null –∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤

            User user = (User) o;

            return age == user.age &&
                   Objects.equals(id, user.id) &&
                   Objects.equals(name, user.name); // —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é
        }

        @Override
        public int hashCode() {
            return Objects.hash(id, name, age); // –∫–æ–º–±–∏–Ω–∏—Ä—É–µ–º –≤—Å–µ –ø–æ–ª—è –≤ —Ö–µ—à
        }
    }

### üîÅ clone()
–ú–µ—Ç–æ–¥ protected native Object clone() throws CloneNotSupportedException

–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:

–ö–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å Cloneable

–ò–Ω–∞—á–µ ‚Äî CloneNotSupportedException

–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ (shallow copy)

–ü—Ä–∏–º–µ—Ä:

    public class User implements Cloneable {
        int id;
        @Override
        protected Object clone() throws CloneNotSupportedException {
            return super.clone();
        }
    }

### üîí wait() / notify() / notifyAll()
–ú–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ synchronized –±–ª–æ–∫–∞

* wait() ‚Äî –ø–æ—Ç–æ–∫ ‚Äú—Å–ø–∏—Ç‚Äù –¥–æ –≤—ã–∑–æ–≤–∞ notify()
* notify() ‚Äî –ø—Ä–æ–±—É–∂–¥–∞–µ—Ç –æ–¥–∏–Ω –ø–æ—Ç–æ–∫
* notifyAll() ‚Äî –ø—Ä–æ–±—É–∂–¥–∞–µ—Ç –≤—Å–µ –æ–∂–∏–¥–∞—é—â–∏–µ –ø–æ—Ç–æ–∫–∏

–ü—Ä–∏–º–µ—Ä:

–ü–æ—Ç–æ–∫ 1 (–æ–∂–∏–¥–∞—é—â–∏–π):
    synchronized (lock) {
        while (!condition) {
            lock.wait();  // –ó–∞—Å—ã–ø–∞–µ—Ç, –º–æ–Ω–∏—Ç–æ—Ä lock –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç—Å—è
        }
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç, –∫–æ–≥–¥–∞ condition —Å—Ç–∞–ª true
        System.out.println("–ü—Ä–æ–¥–æ–ª–∂–∞—é —Ä–∞–±–æ—Ç–∞—Ç—å");
    }
–ü–æ—Ç–æ–∫ 2 (—Å–∏–≥–Ω–∞–ª—è—â–∏–π):

    synchronized (lock) {
        condition = true;
        lock.notify();  // –ë—É–¥–∏—Ç –æ–¥–∏–Ω –ø–æ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –∂–¥–∞–ª –Ω–∞ lock
    }

–ö–æ–≥–¥–∞ –ø–æ—Ç–æ–∫ –≤—ã–∑—ã–≤–∞–µ—Ç lock.wait(), –æ–Ω:

–æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä –æ–±—ä–µ–∫—Ç–∞ lock;

–∏ –≤—Å—Ç–∞—ë—Ç –≤ –æ—á–µ—Ä–µ–¥—å –æ–∂–∏–¥–∞–Ω–∏—è (wait set) –Ω–∞ —ç—Ç–æ–º –æ–±—ä–µ–∫—Ç–µ.

üîÑ –ß—Ç–æ –¥–µ–ª–∞–µ—Ç notify()?
–ö–æ–≥–¥–∞ –¥—Ä—É–≥–æ–π –ø–æ—Ç–æ–∫ –≤—ã–∑—ã–≤–∞–µ—Ç lock.notify():

–æ–Ω –≤—ã–±–∏—Ä–∞–µ—Ç –ª—é–±–æ–π –æ–¥–∏–Ω –ø–æ—Ç–æ–∫ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è (wait set) –Ω–∞ —ç—Ç–æ–º –æ–±—ä–µ–∫—Ç–µ lock;

–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –µ–≥–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–≥–æ—Ç–æ–≤ –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é" (runnable).

‚ùó –ù–æ –ø–æ—Ç–æ–∫ –µ—â—ë –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è ‚Äî –æ–Ω –¥–æ–ª–∂–µ–Ω –¥–æ–∂–¥–∞—Ç—å—Å—è, –ø–æ–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä lock —Å–Ω–æ–≤–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—Å—è, —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä—å synchronized.

ü§î –ö–∞–∫ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –ø–æ—Ç–æ–∫?
notify() –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ –ø–æ—Ç–æ–∫ –±—É–¥–µ—Ç –ø—Ä–æ–±—É–∂–¥—ë–Ω.

–≠—Ç–æ:

–Ω–µ—É–ø—Ä–∞–≤–ª—è–µ–º–æ–µ (–Ω–µ–¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ) –ø–æ–≤–µ–¥–µ–Ω–∏–µ;

JVM —Å–∞–º–∞ –≤—ã–±–∏—Ä–∞–µ—Ç –æ–¥–Ω–æ–≥–æ –∏–∑ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ—Ç–æ–∫–æ–≤ (—á–∞—Å—Ç–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–≤—ã–π, –Ω–æ —ç—Ç–æ –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è).

–ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Ä–∞–∑–±—É–¥–∏—Ç—å –≤—Å–µ—Ö ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—à—å notifyAll().

### üí° getClass()
–ü–æ–ª–µ–∑–µ–Ω –ø—Ä–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ equals() ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–æ—Å—Ç—å:

    if (getClass() != o.getClass()) return false;
